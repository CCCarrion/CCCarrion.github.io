<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/20210130/hello-world.html</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <tags>
        <tag>博客Test</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建记录</title>
    <url>/20200513/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95.html</url>
    <content><![CDATA[<h1 id="前言">前言</h1>
<p>这篇文章是本人对搭建这个博客记录。 <a id="more"></a></p>
<h1 id="github-page-设置">Github Page 设置</h1>
<h2 id="创建github仓库">创建Github仓库</h2>
<p>在github上新建一个仓库，在 yourgithubname 下命名为 <code>yourgithubname.github.io</code>，比如我这个博客就设置为<code>CCCarrion.github.io</code>，我的github用户名就是<code>CCCarrion</code>，我的仓库地址 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NDQ2Fycmlvbi9DQ0NhcnJpb24uZ2l0aHViLmlv">https://github.com/CCCarrion/CCCarrion.github.io<i class="fa fa-external-link-alt"></i></span>。</p>
<p>此时你如果在仓库中上传了静态网页，通过<code>yourgithubname.github.io</code>就可以访问页面了。 理论上说，我们的博客已经搭建完成了！</p>
<h2 id="自定义域名">自定义域名</h2>
<p>如果想要更高点逼格，访问网址想要设置成自己的域名，也是可以的！</p>
<ul>
<li><p>首先，先申请一个自己的域名 比如本站就是<code>carrion.cc</code>.然后就是设置解析，将域名解析到博客服务器去。</p></li>
<li><p>在dns服务添加2个记录，一个是A记录，一个是CNAME记录。 A记录，记录值可以通过本地ping一下<code>yourgithubname.github.io</code>得到的ip地址。 CNAME记录，记录值就是<code>yourgithubname.github.io</code>。</p></li>
<li><p>在跳转后希望浏览器网址显示的也是自己的域名，在<code>yourgithubname.github.io</code>的github仓库页面，找到setting/option下面的custom domain栏填入你的域名即可。</p></li>
</ul>
<h1 id="hexonext-方案部署">Hexo+NexT 方案部署</h1>
<p>上一步，我们把基础设置解决了（服务器+网址解析），这一步我们需要填充博客框架了。 这里，我选择的是hexo。其原理是一套静态页面的编译系统，我们写好的文章，通过hexo编译生成静态页面部署到github page上，也就是我们 <code>yourgithubname.github.io</code>的仓库里，这样我们就可以通过访问之前绑定的域名看到我们的博客文章了。</p>
<h2 id="hexo">Hexo</h2>
<h3 id="准备步骤">准备步骤</h3>
<p>创建一个Private的代码仓库用于存放文章和hexo工程，为了和博客页面仓库区别，我称之为 <strong>BlogBackup</strong> 仓库。</p>
<p>安装<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">Git<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnLw==">node js<i class="fa fa-external-link-alt"></i></span></p>
<p>完成上述步骤，在任意地方右键打开gitbash，输入代码安装hexo环境</p>
<pre><code>npm install hexo-cli -g</code></pre>
<h3 id="部署hexo">部署hexo</h3>
<p>然后在其他地方创建一个空文件夹。 在这个目录下，打开gitbash,</p>
<pre><code>hexo init</code></pre>
<p>进行hexo工程的初始化。此时我们已经搭建好hexo的工程啦~</p>
<p>我们可以试试</p>
<pre><code>hexo s</code></pre>
<p>然后在浏览器里输入 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000/<i class="fa fa-external-link-alt"></i></span> ,就能本地预览hexo生成的博客页面啦~</p>
<p>最后，将hexo工程关联上传到 <strong>BlogBackup</strong> 仓库。</p>
<pre><code>git init 
git remote add origin [你的仓库地址]
git add .
git commit -m &#39;hexo init&#39;
git push -u origin master</code></pre>
<p>Git相关的指令的话，可以下载安装 Sourcetree 界面操作，这里就不展开说了。</p>
<h2 id="next主题">NexT主题</h2>
<p>hexo的默认博客界面有点太丑了，但是没有关系，我们可以选择主题啊！</p>
<p>反复参考后，我选择了NexT主题，因为功能强大，更新及时，而且还应好看，还有一个重要的是，用的人多，改主题做美化教程多呀~</p>
<h3 id="准备步骤-1">准备步骤</h3>
<p>安装theme一般有两种方式：</p>
<div class="tabs" id="next-install-，2"><ul class="nav-tabs"><li class="tab active"><a href="#next-install-，2-1">插件形式</a></li><li class="tab"><a href="#next-install-，2-2">git模式</a></li></ul><div class="tab-content"><div class="tab-pane active" id="next-install-，2-1"><p>gitbash输入</p>
<pre><code>npm i hexo-theme-next</code></pre></div><div class="tab-pane" id="next-install-，2-2"><p>gitbash输入</p>
<pre><code>git clone https://gitlab.com/hexo-theme-next/hexo-theme-next themes/next</code></pre></div></div></div>
<p>因为git模式会将next的全部代码文件放置于themes/next下，方便我们后续的魔改，所以我选择了git模式。</p>
<p>因为我想跟着官方更新又想魔改的东西保留，所以这里我fork了NexT官方仓库作，将自己fork的仓库作为git地址。</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">https://github.com/next-theme/hexo-theme-next<i class="fa fa-external-link-alt"></i></span> fork一下。</p></li>
<li><p>将fork的仓库设置成hexo工程git的submodule：</p>
<p>git submodule add -b [分支名称] --name [子模块名称] [子模块git地址] themes/next</p></li>
</ul>
<h3 id="设置使用next">设置使用NexT</h3>
<p>打开hexo工程下 _config.yml 文件 ，找到</p>
<pre><code>theme: landscape</code></pre>
<p>改成</p>
<pre><code>theme: next</code></pre>
<p>此时，我们就可以在预览一下网站，发现网页外观样式都大变样啦！ 至此，我们已经把hexo+NexT的工程环境搭建完毕了~虽然只是最基础默认的，剩下就是配置一下我们的个人信息和推送设置之类的了。</p>
<h2 id="基础设置">基础设置</h2>
<h3 id="deploy">Deploy</h3>
<h4 id="设置推送">设置推送</h4>
<p>刚才我们建立了博客页面的托管仓库和生成博客页面的hexo工程。那接下我们要做的就是把hexo生成的页面部署到仓库里。</p>
<p>一般来说，hexo 工程下执行</p>
<pre><code>hexo g</code></pre>
<p>就会在工程下生成 public 文件夹，把这个文件夹下的所有内容 覆盖 到 <code>yourgithubname.github.io</code> 仓库就行了。</p>
<p>每次手动操作好像比较麻烦，其实一个指令就可以代劳完成这个步骤。</p>
<ul>
<li><p>安装插件</p>
<pre><code>  npm install hexo-deployer-git --save</code></pre></li>
<li><p>配置 _config.yml 文件</p>
<pre><code>  deploy:
    type: git
    repo: https://github.com/&lt;username&gt;/&lt;project&gt; [ `yourgithubname.github.io` 仓库地址]
    # example, https://github.com/CarrionBlog/CCCarrion.github.io.git
    branch: master</code></pre></li>
<li><p>部署指令</p>
<pre><code>  hexo clean &amp;&amp; hexo deploy</code></pre></li>
</ul>
<p>此时可以登录<code>yourgithubname.github.io</code>域名查看页面部署结果了。</p>
<div class="note primary"><h4 id="自定义域名">自定义域名</h4>
<p>此时会发现之前设置的自定义域名失效了，之前在仓库也变空了，不要慌，现在我们就来解决这个问题。 在之前setting/option下面的custom domain设置时候，其实github会在仓库里添加一个CNAME的文件，文件其实就是一个写着你自定义域名的文本而已。 因为我们 hexo deploy 指令每次都是将生成的页面覆盖上传，所以这个文件就没了。解决办法就是让hexo生成的时候自带这个文件：</p>
<ul>
<li>在hexo/source目录下，新建一个文件，重命名为无拓展名的 CNAME</li>
<li>以记事本方式打开 CNAME 文件，写下你自定义的域名，保存关闭。</li>
</ul>
<p>source目录下的文件，除了几个特殊的目录外，其他都会在生成的时候直接拷贝进public，就正好达成了我们的目的。</p>
</div>
<h4 id="自动部署">自动部署</h4>
<p>还有一种更自动化生成推送的方法，就是 GitHub Action。 这种方法，不需要我们手动部署，只要我们提交更新hexo工程，就会自动部署。 如何配置，可以参看<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NtYTExYmxhY2svaGV4by1hY3Rpb24=">https://github.com/sma11black/hexo-action<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="自定义配置">自定义配置</h3>
<p>Hexo和NexT均提供了很多配置选项供我们配置达到自定义外观和信息。</p>
<h4 id="hexo配置">Hexo配置</h4>
<p>在Hexo工程目录下，打开 _config.yml 可以提供配置的选项都在这里面。 Hexo中主要是对博客的个人信息和文章链接等进行设置，选项也比较少。这里我就不一一介绍了，详情可以看<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv">Hexo文档<i class="fa fa-external-link-alt"></i></span>.</p>
<h4 id="next配置">NexT配置</h4>
<p>本篇记录是基于Hexo 5.0进行的博客搭建，所以针对NexT的设置也是采用最新的方式。</p>
<p>在工程目录下，新建一个文件命名为_config.[name].yml,其中name是你所使用的theme的名字，这里我用的NexT主题，所以我命名为_config.next.yml. 然后打开themes/next/_config.yml,针对需要改动的配置，复制到新建的_config.next.yml. 在生成的时候，Hexo会将_config.next.yml中的配置覆盖主题源文件中的默认配置。 <div class="note primary"><p>这里我不建议直接全部复制再改，因为这样可以更方便看到自己做的哪些修改。</p>
</div></p>
<p>选择配置上还是基本参考官网给的描述进行设置，一般不会出错。这里我就基本列一下我所使用到的修改地方：</p>
<ul>
<li><p>主题设置为 Gemini</p>
<pre><code>  scheme: Gemini</code></pre></li>
<li><p>打开黑暗模式</p>
<pre><code>  darkmode: true</code></pre></li>
<li><p>设置网页标签小图标</p>
<p>在Hexo/Source目录里新建一个文件夹，起名Site_Assets.然后放入自己想要的图片（可以到<span class="exturl" data-url="aHR0cHM6Ly9yZWFsZmF2aWNvbmdlbmVyYXRvci5uZXQv">Favicon Generator<i class="fa fa-external-link-alt"></i></span>预览生成适用格式）。 这里假设我的图片是mylogo.png</p>
<pre><code>  favicon:
    small: /Site_Assets/mylogo.png
    medium: /Site_Assets/mylogo.png
    apple_touch_icon: /Site_Assets/mylogo.png
    safari_pinned_tab: /Site_Assets/mylogo.png</code></pre></li>
<li><p>头像同上</p>
<pre><code>  custom_logo: /Site_Assets/head.png</code></pre></li>
<li><p>创作协议</p>
<p>在文章底部和侧边栏显示协议。</p>
<pre><code>  creative_commons:
    license: by-nc-sa
    sidebar: true
    post: true
    language: deed.zh </code></pre></li>
<li><p>侧边栏菜单配置</p>
<p>home主页和archives文章归档是默认生成的，不需要自行制作页面（当然也可以设置为自定义页面）。其他需要自行生成页面配置。</p>
<ul>
<li><p>Tags</p>
<p>在Hexo目录下，执行代码</p>
<pre><code>  hexo new page tags</code></pre>
<p>会生成hexo.md文件，打开文件将type改成 tags 。 使用NexT的Tagscloud，可以找到相关设置修改</p>
<pre><code>  tagcloud:
    min: 12 # Minimun font size in px
    max: 30 # Maxium font size in px
    amount: 200 # Total amount of tags
    orderby: name # Order of tags
    order: 1 # Sort order</code></pre></li>
<li><p>Categories</p>
<p>分类目录页面，生成方式同上。</p></li>
<li><p>404页面</p>
<p>顺便一提，可以自定义404页面，我这里改成公益页面。</p>
<pre><code>  hexo new page 404</code></pre>
<p>打开source\404.md，改写成：</p>
<pre><code>  ---
  title: &#39;404&#39;
  date: 2014-12-22 12:39:04
  comments: false
  ---
  &lt;script src=&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;
          charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;Back to home&quot;&gt;
  &lt;/script&gt;</code></pre></li>
</ul>
<p>最终Menu我设置如下</p>
<pre><code>  menu:
    home: / || fa fa-home
    #about: /about/ || fa fa-user
    tags: /tags/ || fa fa-tags
    categories: /categories/ || fa fa-th
    archives: /archives/ || fa fa-archive
    #schedule: /schedule/ || fa fa-calendar
    #sitemap: /sitemap.xml || fa fa-sitemap
    #commonweal: /404/ || fa fa-heartbeat</code></pre></li>
<li><p>侧边栏外观设置</p>
<p>没什么好说的，按照文档自行设置。</p></li>
<li><p>底部信息</p>
<p>同上，根据文档说明设置即可。</p></li>
<li><p>文章相关设置</p>
<ul>
<li><p>摘要</p>
<p>在正文部分，写下 <code>&lt;!-- more --&gt;</code> ，在这个标记之前的文本将会作为摘要显示。</p></li>
<li><p>字数统计</p>
<p>安装插件</p>
<pre><code>  npm install hexo-word-counter</code></pre>
<p>增加设置项：</p>
<pre><code>  symbols_count_time:
    symbols: true
    time: true
    total_symbols: true
    total_time: false
    awl: 4
    wpm: 275

    separated_meta: true
    item_text_total: true    </code></pre></li>
<li><p>相关文章推荐</p>
<p>安装插件</p>
<pre><code>   npm install hexo-related-popular-posts</code></pre>
<p>添加设置（只设置了开启，其他自行设置）</p>
<pre><code>  related_posts:
    enable: true</code></pre></li>
<li><p>文章中代码显示设置</p>
<p>根据喜好设置显示代码外观，可以到<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9oaWdobGlnaHQv">https://theme-next.js.org/highlight/<i class="fa fa-external-link-alt"></i></span>预览选择喜欢的样式</p>
<pre><code>  codeblock:
    # Code Highlight theme
    # All available themes: https://theme-next.js.org/highlight/
    theme:
      light: default
      dark: tomorrow-night
    prism:
      light: prism
      dark: prism-dark
    # Add copy button on codeblock
    copy_button:
      enable: true
      # Available values: default | flat | mac
      style: mac</code></pre></li>
<li><p>回到顶部按钮和底部进度条</p>
<pre><code>  back2top:
    enable: true
    # Back to top in sidebar.
    sidebar: true
    # Scroll percent label in b2t button.
    scrollpercent: true

  # Reading progress bar
  reading_progress:
    enable: true
    # Available values: top | bottom
    position: bottom
    color: &quot;#37c6c0&quot;
    height: 3px    </code></pre></li>
<li><p>自定义字体</p>
<p>根据文档选择喜欢的字体。<br />
</p></li>
</ul></li>
<li><p>SEO</p>
<p>这块部分用于优化搜索引擎，具体的完全参照文档操作，这里不重复说明了。</p></li>
<li><p>插件配置</p>
<ul>
<li><p>Math公式</p>
<p>选用MathJax。</p>
<pre><code>  # Math Equation
  math:
    # Default (false) will load mathjax / katex script on demand.
    # That is it only render those page which has `mathjax: true` in front-matter.
    # If you set it to true, it will load mathjax / katex srcipt EVERY PAGE.
    every_page: false

    mathjax:
      enable: true
      # Available values: none | ams | all
      tags: none

    katex:
      enable: false
      # See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex
      copy_tex: false</code></pre></li>
</ul>
<p>因为hexo-renderer-marked实现的LaTex与MarkDown有语法冲突，这里改成用hexo-renderer-pandoc：</p>
<pre><code>      $ npm un hexo-renderer-marked
      $ npm i hexo-renderer-pandoc</code></pre>
<p>使用公式的语法，参考<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL21hdGgtZXF1YXRpb25zLmh0bWw=">https://theme-next.js.org/docs/third-party-services/math-equations.html<i class="fa fa-external-link-alt"></i></span></p>
<p>使用公式的时候，不要忘记在文章front matter部分加上</p>
<pre><code>      mathjax: true</code></pre>
<ul>
<li><p>评论系统</p>
<p>个人是希望可以自己持有留言数据和邮件通知。目前没有一个比较好的免费方案。这里我就使用了LiveRe和gitchat。</p>
<p>详情参考<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL2NvbW1lbnRzLmh0bWw=">https://theme-next.js.org/docs/third-party-services/comments.html<i class="fa fa-external-link-alt"></i></span></p>
<p>增加waline。参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpemhlbWluZy93YWxpbmUvdHJlZS9tYXN0ZXIvcGFja2FnZXMvaGV4by1uZXh0">安装<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly93YWxpbmUuanMub3JnLw==">教程<i class="fa fa-external-link-alt"></i></span></p></li>
<li><p>访客计数</p>
<p><figure class="highlight yml"><figcaption><span>yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure></p></li>
<li><p>搜索</p></li>
</ul>
<p>采用Local Search 安装</p>
<pre><code>       npm install hexo-generator-searchdb</code></pre>
<p>配置 <figure class="highlight yml"><figcaption><span>hexo/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure></p>
<p><figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>其他</p>
<p>我开启了 Pjax，lazyload，pangu 和 quicklink。</p></li>
</ul></li>
<li><p>Tag语法</p>
<p>相关的写法和设置参考<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RhZy1wbHVnaW5zLw==">https://theme-next.js.org/docs/tag-plugins/<i class="fa fa-external-link-alt"></i></span></p></li>
</ul>
<h1 id="魔改美化">魔改美化</h1>
<p>对于Hexo和Next自带的设置暂告一段落了。我发现博客还是有点丑哎。所以这里我记录一下我在Next可提供的设置外做的一些改动。</p>
<h2 id="博客背景">博客背景</h2>
<p>打开自定义文件许可： <figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure></p>
<p>在hexo/source/_data下创建打开 styles.styl，添加代码 <figure class="highlight styl"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//背景图片</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    background:url(/assets/bgp5.jpg); //这里输入背景图片地址</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed; <span class="comment">//不重复</span></span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;    <span class="comment">//填充</span></span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="comment">//filter:blur(10px)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="评论区域加白色背景">评论区域加白色背景</h2>
<figure class="highlight styl"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//评论</span></span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.95</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="文字背景以及半透明设置">文字背景以及半透明设置</h2>
<p>在hexo/source/_data下创建打开 styles.styl，添加代码 <figure class="highlight styl"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//背景半透明设置</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">5px</span> <span class="number">20px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background</span>:rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>) none repeat scroll !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单栏的透明度设置</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">border</span>: none;  </span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">#888888</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-nav</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//侧边栏圆角</span></span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解决菜单选项bug</span></span><br><span class="line"><span class="selector-class">.menu-item</span> <span class="selector-tag">a</span>,<span class="selector-class">.menu-item-active</span> <span class="selector-tag">a</span>, <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span>:hover, <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span>:hover,<span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span><span class="selector-class">.popup-trigger</span>:hover&#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;  </span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span>.popup-trigger&#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sidebar&#123;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">border</span>: none;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//搜索框（local-search）的透明度设置</span></span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大头像无背景</span></span><br><span class="line">.site-brand-container&#123;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//头像无线框</span></span><br><span class="line">.site-author-image&#123; </span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//颜色相关</span></span><br><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffe871</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.powered-by</span> <span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffb6c1</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#ffb6c1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.powered-by</span> <span class="selector-tag">a</span>:hover, <span class="selector-tag">span</span><span class="selector-class">.exturl</span>:hover &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#d0ea4a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar-nav</span> li&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.posts-expand&gt;<span class="selector-tag">ul</span>.breadcrumb&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d0ea4a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.posts-expand&gt;<span class="selector-tag">ul</span><span class="selector-class">.breadcrumb</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>,.posts-expand&gt;<span class="selector-tag">ul</span><span class="selector-class">.breadcrumb</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffb6c1</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#ffb6c1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.posts-expand&gt;<span class="selector-tag">ul</span><span class="selector-class">.breadcrumb</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>:hover,.posts-expand&gt;<span class="selector-tag">ul</span><span class="selector-class">.breadcrumb</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span>:hover &#123;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="number">#4fd4dc</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4fd4dc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//顶部菜单栏分割线</span></span><br><span class="line"><span class="selector-class">.sub-menu</span> &#123;</span><br><span class="line">    <span class="attribute">border-top-width</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-top-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-top-color</span>: rgba(<span class="number">28</span>, <span class="number">88</span>, <span class="number">128</span>, <span class="number">0.59</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="sub-menu-使post也有效">sub-menu 使post也有效</h2>
<p>在next_partials-menu.njk中修改</p>
<figure class="highlight plain"><figcaption><span>sub-menu.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;&#123;%- if theme.menu and is_page() %&#125;   &#x2F;&#x2F;删去改成</span><br><span class="line">&#123;%- if theme.menu and (is_page() or is_post()) %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="加入鼠标点击和输入特效">加入鼠标点击和输入特效</h2>
<p>打开自定义文件许可： <figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">bodyEnd:</span> <span class="string">source/_data/body-end.njk</span></span><br></pre></td></tr></table></figure></p>
<p>在source4个js脚本， <details class="note primary"><summary><p>礼花特效代码</p>
</summary>
<figure class="highlight js"><figcaption><span>fireworks.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">&#123; origin, speed, color, angle, context &#125;</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.origin = origin</span><br><span class="line">    <span class="built_in">this</span>.position = &#123; ...this.origin &#125;</span><br><span class="line">    <span class="built_in">this</span>.color = color</span><br><span class="line">    <span class="built_in">this</span>.speed = speed</span><br><span class="line">    <span class="built_in">this</span>.angle = angle</span><br><span class="line">    <span class="built_in">this</span>.context = context</span><br><span class="line">    <span class="built_in">this</span>.renderCount = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.color</span><br><span class="line">    <span class="built_in">this</span>.context.beginPath()</span><br><span class="line">    <span class="built_in">this</span>.context.arc(<span class="built_in">this</span>.position.x, <span class="built_in">this</span>.position.y, <span class="number">2</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">this</span>.context.fill()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">move</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.position.x = (<span class="built_in">Math</span>.sin(<span class="built_in">this</span>.angle) * <span class="built_in">this</span>.speed) + <span class="built_in">this</span>.position.x</span><br><span class="line">    <span class="built_in">this</span>.position.y = (<span class="built_in">Math</span>.cos(<span class="built_in">this</span>.angle) * <span class="built_in">this</span>.speed) + <span class="built_in">this</span>.position.y + (<span class="built_in">this</span>.renderCount * <span class="number">0.3</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderCount++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boom</span> </span>&#123;</span><br><span class="line">  <span class="title">constructor</span> (<span class="params">&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;</span>) &#123;</span><br><span class="line">    <span class="built_in">this</span>.origin = origin</span><br><span class="line">    <span class="built_in">this</span>.context = context</span><br><span class="line">    <span class="built_in">this</span>.circleCount = circleCount</span><br><span class="line">    <span class="built_in">this</span>.area = area</span><br><span class="line">    <span class="built_in">this</span>.stop = <span class="literal">false</span></span><br><span class="line">    <span class="built_in">this</span>.circles = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">randomArray</span>(<span class="params">range</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> length = range.length</span><br><span class="line">    <span class="keyword">const</span> randomIndex = <span class="built_in">Math</span>.floor(length * <span class="built_in">Math</span>.random())</span><br><span class="line">    <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">randomColor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">randomRange</span>(<span class="params">start, end</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (end - start) * <span class="built_in">Math</span>.random() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.circleCount; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> circle = <span class="keyword">new</span> Circle(&#123;</span><br><span class="line">        context: <span class="built_in">this</span>.context,</span><br><span class="line">        origin: <span class="built_in">this</span>.origin,</span><br><span class="line">        color: <span class="built_in">this</span>.randomColor(),</span><br><span class="line">        angle: <span class="built_in">this</span>.randomRange(<span class="built_in">Math</span>.PI - <span class="number">1</span>, <span class="built_in">Math</span>.PI + <span class="number">1</span>),</span><br><span class="line">        speed: <span class="built_in">this</span>.randomRange(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="built_in">this</span>.circles.push(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">move</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.circles.forEach(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (circle.position.x &gt; <span class="built_in">this</span>.area.width || circle.position.y &gt; <span class="built_in">this</span>.area.height) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.circles.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.move()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.circles.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">this</span>.stop = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">draw</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.circles.forEach(<span class="function"><span class="params">circle</span> =&gt;</span> circle.draw())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CursorSpecialEffects</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.computerCanvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderCanvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.computerContext = <span class="built_in">this</span>.computerCanvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderContext = <span class="built_in">this</span>.renderCanvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.globalWidth = <span class="built_in">window</span>.innerWidth</span><br><span class="line">    <span class="built_in">this</span>.globalHeight = <span class="built_in">window</span>.innerHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.booms = []</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handleMouseDown</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> boom = <span class="keyword">new</span> Boom(&#123;</span><br><span class="line">      origin: &#123; <span class="attr">x</span>: e.clientX, <span class="attr">y</span>: e.clientY &#125;,</span><br><span class="line">      context: <span class="built_in">this</span>.computerContext,</span><br><span class="line">      area: &#123;</span><br><span class="line">        width: <span class="built_in">this</span>.globalWidth,</span><br><span class="line">        height: <span class="built_in">this</span>.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.init()</span><br><span class="line">    <span class="built_in">this</span>.booms.push(boom)</span><br><span class="line">    <span class="built_in">this</span>.running || <span class="built_in">this</span>.run()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">handlePageHide</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.booms = []</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">init</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="built_in">this</span>.renderCanvas.style</span><br><span class="line">    style.position = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">    style.top = style.left = <span class="number">0</span></span><br><span class="line">    style.zIndex = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">    style.pointerEvents = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">    style.width = <span class="built_in">this</span>.renderCanvas.width = <span class="built_in">this</span>.computerCanvas.width = <span class="built_in">this</span>.globalWidth</span><br><span class="line">    style.height = <span class="built_in">this</span>.renderCanvas.height = <span class="built_in">this</span>.computerCanvas.height = <span class="built_in">this</span>.globalHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.body.append(<span class="built_in">this</span>.renderCanvas)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, <span class="built_in">this</span>.handleMouseDown.bind(<span class="built_in">this</span>))</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;pagehide&#x27;</span>, <span class="built_in">this</span>.handlePageHide.bind(<span class="built_in">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">run</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.booms.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(<span class="built_in">this</span>.run.bind(<span class="built_in">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.computerContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line">    <span class="built_in">this</span>.renderContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.booms.forEach(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (boom.stop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.booms.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.move()</span><br><span class="line">      boom.draw()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.renderContext.drawImage(<span class="built_in">this</span>.computerCanvas, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>

</details></p>
<details class="note primary"><summary><p>爆炸特效代码</p>
</summary>
<figure class="highlight js"><figcaption><span>explosion.min.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[-<span class="number">1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length-<span class="number">1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=<span class="number">.1</span>,a.alpha=<span class="number">.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)e.animatables[t].target.draw()&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)n.push(createParticule(e,t));anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>,i=<span class="built_in">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;</span><br></pre></td></tr></table></figure>

</details>
<details class="note primary"><summary><p>浮出爱心特效代码</p>
</summary>
<figure class="highlight js"><figcaption><span>love.min.js</span></figcaption><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX-<span class="number">5</span>,<span class="attr">y</span>:e.clientY-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

</details>
<details class="note primary"><summary><p>浮出文字特效代码</p>
</summary>
<figure class="highlight js"><figcaption><span>text.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;body&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;喜欢我&quot;</span>, <span class="string">&quot;不喜欢我&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]);</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">    y = e.pageY;</span><br><span class="line">    $i.css(&#123;</span><br><span class="line">      <span class="string">&quot;z-index&quot;</span>: <span class="number">99999</span>,</span><br><span class="line">      <span class="string">&quot;top&quot;</span>: y - <span class="number">28</span>,</span><br><span class="line">      <span class="string">&quot;left&quot;</span>: x - a[a_idx].length * <span class="number">8</span>,</span><br><span class="line">      <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff7a45&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).append($i);</span><br><span class="line">    $i.animate(&#123;</span><br><span class="line">      <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line">      <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;, <span class="number">1500</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      $i.remove();</span><br><span class="line">    &#125;);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

</details>
<p>在source <details class="note primary"><summary><p>打字特效代码</p>
</summary>
<figure class="highlight js"><figcaption><span>activate-power-mode.min.js</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">webpackUniversalModuleDefinition</span>(<span class="params">root,factory</span>)</span>&#123;<span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">exports</span>===<span class="string">&#x27;object&#x27;</span>&amp;&amp;<span class="keyword">typeof</span> <span class="built_in">module</span>===<span class="string">&#x27;object&#x27;</span>)<span class="built_in">module</span>.exports=factory();<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> define===<span class="string">&#x27;function&#x27;</span>&amp;&amp;define.amd)define([],factory);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">exports</span>===<span class="string">&#x27;object&#x27;</span>)<span class="built_in">exports</span>[<span class="string">&quot;POWERMODE&quot;</span>]=factory();<span class="keyword">else</span> root[<span class="string">&quot;POWERMODE&quot;</span>]=factory()&#125;)(<span class="built_in">this</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>(<span class="function"><span class="keyword">function</span>(<span class="params">modules</span>)</span>&#123;<span class="keyword">var</span> installedModules=&#123;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">__webpack_require__</span>(<span class="params">moduleId</span>)</span>&#123;<span class="keyword">if</span>(installedModules[moduleId])<span class="keyword">return</span> installedModules[moduleId].exports;<span class="keyword">var</span> <span class="built_in">module</span>=installedModules[moduleId]=&#123;<span class="attr">exports</span>:&#123;&#125;,<span class="attr">id</span>:moduleId,<span class="attr">loaded</span>:<span class="literal">false</span>&#125;;modules[moduleId].call(<span class="built_in">module</span>.exports,<span class="built_in">module</span>,<span class="built_in">module</span>.exports,__webpack_require__);<span class="built_in">module</span>.loaded=<span class="literal">true</span>;<span class="keyword">return</span> <span class="built_in">module</span>.exports&#125;__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p=<span class="string">&quot;&quot;</span>;<span class="keyword">return</span> __webpack_require__(<span class="number">0</span>)&#125;)([<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">module</span>,<span class="built_in">exports</span>,__webpack_require__</span>)</span>&#123;<span class="string">&#x27;use strict&#x27;</span>;<span class="keyword">var</span> canvas=<span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>);canvas.width=<span class="built_in">window</span>.innerWidth;canvas.height=<span class="built_in">window</span>.innerHeight;canvas.style.cssText=<span class="string">&#x27;position:fixed;top:0;left:0;pointer-events:none;z-index:999999&#x27;</span>;<span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvas.width=<span class="built_in">window</span>.innerWidth;canvas.height=<span class="built_in">window</span>.innerHeight&#125;);<span class="built_in">document</span>.body.appendChild(canvas);<span class="keyword">var</span> context=canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);<span class="keyword">var</span> particles=[];<span class="keyword">var</span> particlePointer=<span class="number">0</span>;POWERMODE.shake=<span class="literal">true</span>;<span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">min,max</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">Math</span>.random()*(max-min)+min&#125;<span class="function"><span class="keyword">function</span> <span class="title">getColor</span>(<span class="params">el</span>)</span>&#123;<span class="keyword">if</span>(POWERMODE.colorful)&#123;<span class="keyword">var</span> u=getRandom(<span class="number">0</span>,<span class="number">360</span>);<span class="keyword">return</span><span class="string">&#x27;hsla(&#x27;</span>+getRandom(u-<span class="number">10</span>,u+<span class="number">10</span>)+<span class="string">&#x27;, 100%, &#x27;</span>+getRandom(<span class="number">50</span>,<span class="number">80</span>)+<span class="string">&#x27;%, &#x27;</span>+<span class="number">1</span>+<span class="string">&#x27;)&#x27;</span>&#125;<span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="built_in">window</span>.getComputedStyle(el).color&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">getCaret</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> el=<span class="built_in">document</span>.activeElement;<span class="keyword">var</span> bcr;<span class="keyword">if</span>(el.tagName===<span class="string">&#x27;TEXTAREA&#x27;</span>||(el.tagName===<span class="string">&#x27;INPUT&#x27;</span>&amp;&amp;el.getAttribute(<span class="string">&#x27;type&#x27;</span>)===<span class="string">&#x27;text&#x27;</span>))&#123;<span class="keyword">var</span> offset=__webpack_require__(<span class="number">1</span>)(el,el.selectionStart);bcr=el.getBoundingClientRect();<span class="keyword">return</span>&#123;<span class="attr">x</span>:offset.left+bcr.left,<span class="attr">y</span>:offset.top+bcr.top,<span class="attr">color</span>:getColor(el)&#125;&#125;<span class="keyword">var</span> selection=<span class="built_in">window</span>.getSelection();<span class="keyword">if</span>(selection.rangeCount)&#123;<span class="keyword">var</span> range=selection.getRangeAt(<span class="number">0</span>);<span class="keyword">var</span> startNode=range.startContainer;<span class="keyword">if</span>(startNode.nodeType===<span class="built_in">document</span>.TEXT_NODE)&#123;startNode=startNode.parentNode&#125;bcr=range.getBoundingClientRect();<span class="keyword">return</span>&#123;<span class="attr">x</span>:bcr.left,<span class="attr">y</span>:bcr.top,<span class="attr">color</span>:getColor(startNode)&#125;&#125;<span class="keyword">return</span>&#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">color</span>:<span class="string">&#x27;transparent&#x27;</span>&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticle</span>(<span class="params">x,y,color</span>)</span>&#123;<span class="keyword">return</span>&#123;<span class="attr">x</span>:x,<span class="attr">y</span>:y,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:color,<span class="attr">velocity</span>:&#123;<span class="attr">x</span>:-<span class="number">1</span>+<span class="built_in">Math</span>.random()*<span class="number">2</span>,<span class="attr">y</span>:-<span class="number">3.5</span>+<span class="built_in">Math</span>.random()*<span class="number">2</span>&#125;&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">POWERMODE</span>(<span class="params"></span>)</span>&#123;&#123;<span class="keyword">var</span> caret=getCaret();<span class="keyword">var</span> numParticles=<span class="number">5</span>+<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">10</span>);<span class="keyword">while</span>(numParticles--)&#123;particles[particlePointer]=createParticle(caret.x,caret.y,caret.color);particlePointer=(particlePointer+<span class="number">1</span>)%<span class="number">500</span>&#125;&#125;&#123;<span class="keyword">if</span>(POWERMODE.shake)&#123;<span class="keyword">var</span> intensity=<span class="number">1</span>+<span class="number">2</span>*<span class="built_in">Math</span>.random();<span class="keyword">var</span> x=intensity*(<span class="built_in">Math</span>.random()&gt;<span class="number">0.5</span>?-<span class="number">1</span>:<span class="number">1</span>);<span class="keyword">var</span> y=intensity*(<span class="built_in">Math</span>.random()&gt;<span class="number">0.5</span>?-<span class="number">1</span>:<span class="number">1</span>);<span class="built_in">document</span>.body.style.marginLeft=x+<span class="string">&#x27;px&#x27;</span>;<span class="built_in">document</span>.body.style.marginTop=y+<span class="string">&#x27;px&#x27;</span>;<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">document</span>.body.style.marginLeft=<span class="string">&#x27;&#x27;</span>;<span class="built_in">document</span>.body.style.marginTop=<span class="string">&#x27;&#x27;</span>&#125;,<span class="number">75</span>)&#125;&#125;&#125;;POWERMODE.colorful=<span class="literal">false</span>;<span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params"></span>)</span>&#123;requestAnimationFrame(loop);context.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height);<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;particles.length;++i)&#123;<span class="keyword">var</span> particle=particles[i];<span class="keyword">if</span>(particle.alpha&lt;=<span class="number">0.1</span>)<span class="keyword">continue</span>;particle.velocity.y+=<span class="number">0.075</span>;particle.x+=particle.velocity.x;particle.y+=particle.velocity.y;particle.alpha*=<span class="number">0.96</span>;context.globalAlpha=particle.alpha;context.fillStyle=particle.color;context.fillRect(<span class="built_in">Math</span>.round(particle.x-<span class="number">1.5</span>),<span class="built_in">Math</span>.round(particle.y-<span class="number">1.5</span>),<span class="number">3</span>,<span class="number">3</span>)&#125;&#125;requestAnimationFrame(loop);<span class="built_in">module</span>.exports=POWERMODE&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">module</span>,<span class="built_in">exports</span></span>)</span>&#123;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> properties=[<span class="string">&#x27;direction&#x27;</span>,<span class="string">&#x27;boxSizing&#x27;</span>,<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;height&#x27;</span>,<span class="string">&#x27;overflowX&#x27;</span>,<span class="string">&#x27;overflowY&#x27;</span>,<span class="string">&#x27;borderTopWidth&#x27;</span>,<span class="string">&#x27;borderRightWidth&#x27;</span>,<span class="string">&#x27;borderBottomWidth&#x27;</span>,<span class="string">&#x27;borderLeftWidth&#x27;</span>,<span class="string">&#x27;borderStyle&#x27;</span>,<span class="string">&#x27;paddingTop&#x27;</span>,<span class="string">&#x27;paddingRight&#x27;</span>,<span class="string">&#x27;paddingBottom&#x27;</span>,<span class="string">&#x27;paddingLeft&#x27;</span>,<span class="string">&#x27;fontStyle&#x27;</span>,<span class="string">&#x27;fontVariant&#x27;</span>,<span class="string">&#x27;fontWeight&#x27;</span>,<span class="string">&#x27;fontStretch&#x27;</span>,<span class="string">&#x27;fontSize&#x27;</span>,<span class="string">&#x27;fontSizeAdjust&#x27;</span>,<span class="string">&#x27;lineHeight&#x27;</span>,<span class="string">&#x27;fontFamily&#x27;</span>,<span class="string">&#x27;textAlign&#x27;</span>,<span class="string">&#x27;textTransform&#x27;</span>,<span class="string">&#x27;textIndent&#x27;</span>,<span class="string">&#x27;textDecoration&#x27;</span>,<span class="string">&#x27;letterSpacing&#x27;</span>,<span class="string">&#x27;wordSpacing&#x27;</span>,<span class="string">&#x27;tabSize&#x27;</span>,<span class="string">&#x27;MozTabSize&#x27;</span>];<span class="keyword">var</span> isFirefox=<span class="built_in">window</span>.mozInnerScreenX!=<span class="literal">null</span>;<span class="function"><span class="keyword">function</span> <span class="title">getCaretCoordinates</span>(<span class="params">element,position,options</span>)</span>&#123;<span class="keyword">var</span> debug=options&amp;&amp;options.debug||<span class="literal">false</span>;<span class="keyword">if</span>(debug)&#123;<span class="keyword">var</span> el=<span class="built_in">document</span>.querySelector(<span class="string">&#x27;#input-textarea-caret-position-mirror-div&#x27;</span>);<span class="keyword">if</span>(el)&#123;el.parentNode.removeChild(el)&#125;&#125;<span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);div.id=<span class="string">&#x27;input-textarea-caret-position-mirror-div&#x27;</span>;<span class="built_in">document</span>.body.appendChild(div);<span class="keyword">var</span> style=div.style;<span class="keyword">var</span> computed=<span class="built_in">window</span>.getComputedStyle?getComputedStyle(element):element.currentStyle;style.whiteSpace=<span class="string">&#x27;pre-wrap&#x27;</span>;<span class="keyword">if</span>(element.nodeName!==<span class="string">&#x27;INPUT&#x27;</span>)style.wordWrap=<span class="string">&#x27;break-word&#x27;</span>;style.position=<span class="string">&#x27;absolute&#x27;</span>;<span class="keyword">if</span>(!debug)style.visibility=<span class="string">&#x27;hidden&#x27;</span>;properties.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">prop</span>)</span>&#123;style[prop]=computed[prop]&#125;);<span class="keyword">if</span>(isFirefox)&#123;<span class="keyword">if</span>(element.scrollHeight&gt;<span class="built_in">parseInt</span>(computed.height))style.overflowY=<span class="string">&#x27;scroll&#x27;</span>&#125;<span class="keyword">else</span>&#123;style.overflow=<span class="string">&#x27;hidden&#x27;</span>&#125;div.textContent=element.value.substring(<span class="number">0</span>,position);<span class="keyword">if</span>(element.nodeName===<span class="string">&#x27;INPUT&#x27;</span>)div.textContent=div.textContent.replace(<span class="regexp">/\s/g</span>,<span class="string">&quot;\u00a0&quot;</span>);<span class="keyword">var</span> span=<span class="built_in">document</span>.createElement(<span class="string">&#x27;span&#x27;</span>);span.textContent=element.value.substring(position)||<span class="string">&#x27;.&#x27;</span>;div.appendChild(span);<span class="keyword">var</span> coordinates=&#123;<span class="attr">top</span>:span.offsetTop+<span class="built_in">parseInt</span>(computed[<span class="string">&#x27;borderTopWidth&#x27;</span>]),<span class="attr">left</span>:span.offsetLeft+<span class="built_in">parseInt</span>(computed[<span class="string">&#x27;borderLeftWidth&#x27;</span>])&#125;;<span class="keyword">if</span>(debug)&#123;span.style.backgroundColor=<span class="string">&#x27;#aaa&#x27;</span>&#125;<span class="keyword">else</span>&#123;<span class="built_in">document</span>.body.removeChild(div)&#125;<span class="keyword">return</span> coordinates&#125;<span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">module</span>!=<span class="string">&quot;undefined&quot;</span>&amp;&amp;<span class="keyword">typeof</span> <span class="built_in">module</span>.exports!=<span class="string">&quot;undefined&quot;</span>)&#123;<span class="built_in">module</span>.exports=getCaretCoordinates&#125;<span class="keyword">else</span>&#123;<span class="built_in">window</span>.getCaretCoordinates=getCaretCoordinates&#125;&#125;())&#125;])&#125;);</span><br></pre></td></tr></table></figure>

</details></p>
<p>在hexo/source/_data下创建打开 body-end.njk，添加代码 <figure class="highlight plain"><figcaption><span>lang:njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">	&#123;% if theme.cursor_effect &#x3D;&#x3D; &quot;fireworks&quot; %&#125;</span><br><span class="line">	  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;fireworks.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	&#123;% elseif theme.cursor_effect &#x3D;&#x3D; &quot;explosion&quot; %&#125;</span><br><span class="line">	  &lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt;</span><br><span class="line">	  &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;explosion.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	&#123;% elseif theme.cursor_effect &#x3D;&#x3D; &quot;love&quot; %&#125;</span><br><span class="line">	  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;love.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	&#123;% elseif theme.cursor_effect &#x3D;&#x3D; &quot;text&quot; %&#125;</span><br><span class="line">	  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;text.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# 打字特效 #&#125;</span><br><span class="line">&#123;% if theme.typing_effect %&#125;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#x2F;js&#x2F;activate-power-mode.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    POWERMODE.colorful &#x3D; &#123;&#123; theme.typing_effect.colorful &#125;&#125;;</span><br><span class="line">    POWERMODE.shake &#x3D; &#123;&#123; theme.typing_effect.shake &#125;&#125;;</span><br><span class="line">    document.body.addEventListener(&#39;input&#39;, POWERMODE);</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% en主题dif %&#125;</span><br></pre></td></tr></table></figure> 在主题配置文件加入配置项</p>
<figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#点击和打字特效</span></span><br><span class="line"><span class="comment"># mouse click effect: fireworks | explosion | love | text</span></span><br><span class="line"><span class="attr">cursor_effect:</span> <span class="string">fireworks</span></span><br><span class="line"><span class="comment"># typing effect</span></span><br><span class="line"><span class="attr">typing_effect:</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span>  <span class="comment"># 礼花特效</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">false</span>  <span class="comment"># 震动特效</span></span><br></pre></td></tr></table></figure>
<h2 id="tagcloud">TagCloud</h2>
<p>安装插件</p>
<pre><code>npm install hexo-tag-cloud --save</code></pre>
<p>在 next_partials.njk 中内容替换成</p>
<figure class="highlight plain"><figcaption><span>tags.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;tag-cloud&quot;&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;tag-cloud-title&quot;&gt;</span><br><span class="line">    &#123;&#123; _p(&#39;counter.tag_cloud&#39;, site.tags.length) &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">  &#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot; src&#x3D;&quot;&#123;&#123; url_for(&#39;&#x2F;js&#x2F;tagcloud.js&#39;) &#125;&#125;&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot; src&#x3D;&quot;&#123;&#123; url_for(&#39;&#x2F;js&#x2F;tagcanvas.js&#39;) &#125;&#125;&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;widget-wrap&quot;&gt;</span><br><span class="line">      &lt;h3 class&#x3D;&quot;widget-title&quot;&gt;Tag Cloud&lt;&#x2F;h3&gt;</span><br><span class="line">      &lt;div id&#x3D;&quot;myCanvasContainer&quot; class&#x3D;&quot;widget tagcloud&quot;&gt;</span><br><span class="line">          &lt;canvas width&#x3D;&quot;250&quot; height&#x3D;&quot;250&quot; id&#x3D;&quot;resCanvas&quot; style&#x3D;&quot;width&#x3D;100%&quot;&gt;</span><br><span class="line">              &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">          &lt;&#x2F;canvas&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">  &lt;div class&#x3D;&quot;tag-cloud-tags&quot;&gt;</span><br><span class="line">    &#123;&#123; tagcloud(&#123;</span><br><span class="line">      min_font: theme.tagcloud.min,</span><br><span class="line">      max_font: theme.tagcloud.max,</span><br><span class="line">      amount  : theme.tagcloud.amount,</span><br><span class="line">      orderby : theme.tagcloud.orderby,</span><br><span class="line">      order   : theme.tagcloud.order,</span><br><span class="line">      class   : &#39;tag-cloud&#39;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在配置文件加入配置项 <figure class="highlight yml"><figcaption><span>hexo/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-tag-cloud</span></span><br><span class="line">	<span class="attr">tag_cloud:</span></span><br><span class="line">	    <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span></span><br><span class="line">	    <span class="attr">textColor:</span> <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">	    <span class="attr">textHeight:</span> <span class="number">100</span></span><br><span class="line">	    <span class="attr">outlineColor:</span> <span class="string">&#x27;#E2E1D1&#x27;</span></span><br><span class="line">	    <span class="attr">maxSpeed:</span> <span class="number">0.5</span></span><br></pre></td></tr></table></figure></p>
<h2 id="live2d">live2D</h2>
<p>安装插件</p>
<pre><code>npm install --save hexo-helper-live2d</code></pre>
<p>在主题配置文件加入 <figure class="highlight yml"><figcaption><span>hexo/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">200</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">40</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-150</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.9</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.7</span></span><br><span class="line">  <span class="attr">dialog:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hitokoto:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p>还可以百度找找其他模型的配置。</p>
<h2 id="底部彩色滚动字样">底部彩色滚动字样</h2>
<p>打开自定义文件许可： <figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">    <span class="attr">footer:</span> <span class="string">source/_data/footer.njk</span></span><br></pre></td></tr></table></figure></p>
<p>在hexo/source/_data下创建打开 footer.njk，添加代码 <details class="note primary"><summary><p>代码</p>
</summary>
<figure class="highlight plain"><figcaption><span>footer.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;binft&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    var binft &#x3D; function (r) &#123;</span><br><span class="line">      function t() &#123;</span><br><span class="line">        return b[Math.floor(Math.random() * b.length)]</span><br><span class="line">      &#125;  </span><br><span class="line">      function e() &#123;</span><br><span class="line">        return String.fromCharCode(94 * Math.random() + 33)</span><br><span class="line">      &#125;</span><br><span class="line">      function n(r) &#123;</span><br><span class="line">        for (var n &#x3D; document.createDocumentFragment(), i &#x3D; 0; r &gt; i; i++) &#123;</span><br><span class="line">          var l &#x3D; document.createElement(&quot;span&quot;);</span><br><span class="line">          l.textContent &#x3D; e(), l.style.color &#x3D; t(), n.appendChild(l)</span><br><span class="line">        &#125;</span><br><span class="line">        return n</span><br><span class="line">      &#125;</span><br><span class="line">      function i() &#123;</span><br><span class="line">        var t &#x3D; o[c.skillI];</span><br><span class="line">        c.step ? c.step-- : (c.step &#x3D; g, c.prefixP &lt; l.length ? (c.prefixP &gt;&#x3D; 0 &amp;&amp; (c.text +&#x3D; l[c.prefixP]), c.prefixP++) : &quot;forward&quot; &#x3D;&#x3D;&#x3D; c.direction ? c.skillP &lt; t.length ? (c.text +&#x3D; t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction &#x3D; &quot;backward&quot;, c.delay &#x3D; a) : c.skillP &gt; 0 ? (c.text &#x3D; c.text.slice(0, -1), c.skillP--) : (c.skillI &#x3D; (c.skillI + 1) % o.length, c.direction &#x3D; &quot;forward&quot;)), r.textContent &#x3D; c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)</span><br><span class="line">      &#125;</span><br><span class="line">      var l &#x3D; &quot;&quot;,</span><br><span class="line">      o &#x3D; [&quot;青青陵上柏，磊磊涧中石。&quot;, &quot;人生天地间，忽如远行客。&quot;,&quot;斗酒相娱乐，聊厚不为薄。&quot;, &quot;驱车策驽马，游戏宛与洛。&quot;,&quot;洛中何郁郁，冠带自相索。&quot;,&quot;长衢罗夹巷，王侯多第宅。&quot;,&quot;两宫遥相望，双阙百余尺。&quot;,&quot;极宴娱心意，戚戚何所迫？&quot;].map(function (r) &#123;</span><br><span class="line">      return r + &quot;&quot;</span><br><span class="line">      &#125;),</span><br><span class="line">      a &#x3D; 2,</span><br><span class="line">      g &#x3D; 1,</span><br><span class="line">      s &#x3D; 5,</span><br><span class="line">      d &#x3D; 75,</span><br><span class="line">      b &#x3D; [&quot;rgb(110,64,170)&quot;, &quot;rgb(150,61,179)&quot;, &quot;rgb(191,60,175)&quot;, &quot;rgb(228,65,157)&quot;, &quot;rgb(254,75,131)&quot;, &quot;rgb(255,94,99)&quot;, &quot;rgb(255,120,71)&quot;, &quot;rgb(251,150,51)&quot;, &quot;rgb(226,183,47)&quot;, &quot;rgb(198,214,60)&quot;, &quot;rgb(175,240,91)&quot;, &quot;rgb(127,246,88)&quot;, &quot;rgb(82,246,103)&quot;, &quot;rgb(48,239,130)&quot;, &quot;rgb(29,223,163)&quot;, &quot;rgb(26,199,194)&quot;, &quot;rgb(35,171,216)&quot;, &quot;rgb(54,140,225)&quot;, &quot;rgb(76,110,219)&quot;, &quot;rgb(96,84,200)&quot;],</span><br><span class="line">      c &#x3D; &#123;</span><br><span class="line">        text: &quot;&quot;,</span><br><span class="line">        prefixP: -s,</span><br><span class="line">        skillI: 0,</span><br><span class="line">        skillP: 0,</span><br><span class="line">        direction: &quot;forward&quot;,</span><br><span class="line">        delay: a,</span><br><span class="line">        step: g</span><br><span class="line">      &#125;;</span><br><span class="line">      i()</span><br><span class="line">      &#125;;</span><br><span class="line">      binft(document.getElementById(&#39;binft&#39;));</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

</details> ## 文末结束语 打开自定义文件许可： <figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">      <span class="attr">postBodyEnd:</span> <span class="string">source/_data/post-body-end.njk</span></span><br></pre></td></tr></table></figure></p>
<p>在hexo/source/_data下创建打开 post-body-end.njk，添加代码 <details class="note primary"><summary><p>代码</p>
</summary>
<figure class="highlight plain"><figcaption><span>post-body-end.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div class&#x3D;&quot;end-slogan&quot; style&#x3D;&quot;text-align:center;font-size:13px;letter-spacing:10px;user-select:none;color:#bbb;&quot;&gt;&lt;br&#x2F;&gt;本文结束啦&lt;i class&#x3D;&quot;fa fa-star&quot;&gt;&lt;&#x2F;i&gt;感谢您阅读&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt; </span><br></pre></td></tr></table></figure>

</details></p>
<p>在主题配置文件加入 <figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h2 id="文末名言">文末名言</h2>
<p>在hexo/source/_data下打开 post-body-end.njk 加入</p>
<details class="note primary"><summary><p>代码</p>
</summary>
<figure class="highlight plain"><figcaption><span>post-body-end.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 文件位置：~&#x2F;source&#x2F;_data&#x2F;post-body-end.swig --&gt;</span><br><span class="line">	&lt;div style&#x3D;&quot;text-align: center&quot;&gt;&lt;span id&#x3D;&quot;jrsc&quot; &gt;正在加载今日诗词....&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

</details>
<p>在hexo/source/_data下打开body-end.njk 加入</p>
<details class="note primary"><summary><p>代码</p>
</summary>
<figure class="highlight plain"><figcaption><span>body-end.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;&#x2F;sdk.jinrishici.com&#x2F;v2&#x2F;browser&#x2F;jinrishici.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  console.log(&#39;今日诗词 - 开始加载...&#39;);</span><br><span class="line">  jinrishici.load((result) &#x3D;&gt; &#123;</span><br><span class="line">    let jrsc &#x3D; document.getElementById(&#39;jrsc&#39;);</span><br><span class="line">    if (jrsc) &#123;</span><br><span class="line">      console.log(&#39;今日诗词 - 标签获取成功.&#39;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      console.log(&#39;今日诗词 - 标签获取失败!&#39;);</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    const data &#x3D; result.data;</span><br><span class="line">    let author &#x3D; data.origin.author;</span><br><span class="line">    let title &#x3D; &#39;《&#39; + data.origin.title + &#39;》&#39;;</span><br><span class="line">    let content &#x3D; data.content.substr(0, data.content.length - 1);</span><br><span class="line">    let dynasty &#x3D; data.origin.dynasty.substr(0, data.origin.dynasty.length - 1);</span><br><span class="line">    jrsc.innerText &#x3D; content + &#39; @ &#39; + dynasty + &#39;·&#39; + author + title;</span><br><span class="line">    console.log(&#39;今日诗词 - 载入完毕.&#39;);</span><br><span class="line">    if (data.origin.author &#x3D;&#x3D; &#39;李白&#39;) &#123;</span><br><span class="line">      let audio &#x3D; document.createElement(&quot;audio&quot;);</span><br><span class="line">      audio.src &#x3D; &quot;&#x2F;ding.mp3&quot;;</span><br><span class="line">      audio.play();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

</details>
<h2 id="addthis-分享设置文章底部">Addthis 分享设置文章底部</h2>
<p>在主题配置文件设置 <figure class="highlight yml"><figcaption><span>hexo/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">add_this_id:</span> <span class="string">（空置）</span></span><br><span class="line"><span class="attr">add_this_id_PostEnd:</span> <span class="string">xxxx</span></span><br></pre></td></tr></table></figure></p>
<details class="note primary"><summary><p>代码</p>
</summary>
<figure class="highlight plain"><figcaption><span>post-body-end.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.add_this_id_PostEnd %&#125;</span><br><span class="line"> 	&lt;div class&#x3D;&quot;addthis_inline_share_toolbox&quot; style&#x3D;&quot;text-align: right;&quot;&gt;</span><br><span class="line">   	&lt;script src&#x3D;&quot;&#x2F;&#x2F;s7.addthis.com&#x2F;js&#x2F;300&#x2F;addthis_widget.js#pubid&#x3D;&#123;&#123; theme.add_this_id_PostEnd &#125;&#125;&quot; async&#x3D;&quot;async&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> 	&lt;&#x2F;div&gt;</span><br><span class="line">&#123;%- endif %&#125;	</span><br></pre></td></tr></table></figure>

</details>
<h2 id="豆瓣书页">豆瓣书页</h2>
<p>安装插件</p>
<pre><code>npm install hexo-douban --save</code></pre>
<p>在主题配置文件设置 <figure class="highlight yml"><figcaption><span>hexo/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">mythsman</span></span><br><span class="line">  <span class="attr">builtin:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">book:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;This is my book title&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;This is my book quote&#x27;</span></span><br><span class="line">  <span class="attr">movie:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;This is my movie title&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;This is my movie quote&#x27;</span></span><br><span class="line">  <span class="attr">game:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;This is my game title&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;This is my game quote&#x27;</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL215dGhzbWFuL2hleG8tZG91YmFu">详查<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
